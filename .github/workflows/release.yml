name: Build and Release Rust Binaries

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            ext: tar.gz
          - os: windows-latest
            target: x86_64-pc-windows-gnu
            ext: zip
          - os: macos-latest
            target: x86_64-apple-darwin
            ext: tar.gz

    runs-on: ${{ matrix.os }}

    env:
      CARGO_TERM_COLOR: always

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: Build binary
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package binary
        run: |
          mkdir -p dist
          BIN_NAME="myapp"  # <-- Change to your binary name
          TARGET_DIR="target/${{ matrix.target }}/release"
          
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            zip -j "dist/${BIN_NAME}-${{ matrix.target }}.${{ matrix.ext }}" "${TARGET_DIR}/${BIN_NAME}.exe"
          else
            tar -czf "dist/${BIN_NAME}-${{ matrix.target }}.${{ matrix.ext }}" -C "${TARGET_DIR}" "${BIN_NAME}"
          fi

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
